# Generated by Django 5.2 on 2025-05-20 10:56

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ISVPais',
            fields=[
                ('id_pais', models.AutoField(primary_key=True, serialize=False)),
                ('pais', models.CharField(max_length=100, unique=True, verbose_name='País')),
                ('costo_envio_pais', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Costo de Envío')),
            ],
            options={
                'verbose_name': 'País con ISV',
                'verbose_name_plural': 'Países con ISV',
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre del Producto')),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Precio')),
                ('cantidad_en_stock', models.PositiveIntegerField(help_text='Cantidad disponible en inventario', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Stock')),
                ('desc_prod', models.TextField(blank=True, null=True, verbose_name='Descripción del Producto')),
                ('image', models.ImageField(blank=True, help_text='Imagen del producto codificada en Base64', null=True, upload_to='', verbose_name='Imagen en Base64')),
                ('categoria', models.CharField(choices=[('M', 'Mujeres'), ('H', 'Hombres'), ('U', 'Unisex')], max_length=3, verbose_name='Categoría')),
                ('tamaño', models.CharField(blank=True, choices=[('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('XXL', 'XXL')], help_text='Tamaño del producto', max_length=3, null=True, verbose_name='Tamaño')),
                ('colores', models.CharField(default='#FFFFFF', help_text='Color en formato hexadecimal (ej. #FF0000)', max_length=7, validators=[django.core.validators.RegexValidator(message='Formato hexadecimal inválido. Debe ser como #RRGGBB', regex='^#[0-9A-Fa-f]{6}$')], verbose_name='Color Hexadecimal')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
            },
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id_pedido', models.AutoField(primary_key=True, serialize=False)),
                ('company', models.CharField(blank=True, max_length=255, null=True, verbose_name='Compañía')),
                ('direccion', models.TextField(verbose_name='Dirección de Envío')),
                ('estado_pais', models.CharField(max_length=100, verbose_name='Estado/Provincia')),
                ('ciudad', models.CharField(max_length=100, verbose_name='Ciudad')),
                ('zip', models.CharField(max_length=20, verbose_name='Código Postal')),
                ('correo', models.EmailField(max_length=254, verbose_name='Correo Electrónico')),
                ('telefono', models.CharField(max_length=20, verbose_name='Teléfono')),
                ('estado_compra', models.CharField(choices=[('Pagado', 'Pagado'), ('En Camino', 'En Camino'), ('Recibido', 'Recibido'), ('Cancelado', 'Cancelado')], default='Pagado', max_length=20, verbose_name='Estado del Pedido')),
                ('desc_adicional', models.TextField(blank=True, null=True, verbose_name='Descripción Adicional')),
                ('fecha_compra', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_entrega', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Entrega')),
                ('pais', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='TiendaOnline.isvpais', verbose_name='País')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'ordering': ['-fecha_compra'],
            },
        ),
        migrations.CreateModel(
            name='PedidoDetalle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_prod', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Cantidad')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('isv', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ISV')),
                ('envio', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Envío')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='TiendaOnline.pedido', verbose_name='Pedido')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TiendaOnline.producto', verbose_name='Producto')),
            ],
            options={
                'verbose_name': 'Detalle de Pedido',
                'verbose_name_plural': 'Detalles de Pedido',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo Electrónico')),
                ('id_usuario', models.IntegerField(null=True, unique=True, verbose_name='identificador del usuario')),
                ('nombre_cliente', models.CharField(max_length=100, verbose_name='Nombre del Cliente')),
                ('apellido_cliente', models.CharField(max_length=100, verbose_name='Apellido del Cliente')),
                ('direccion', models.TextField(verbose_name='Dirección')),
                ('estado_pais', models.CharField(max_length=100, verbose_name='Estado/Provincia')),
                ('ciudad', models.CharField(max_length=100, verbose_name='Ciudad')),
                ('zip', models.CharField(max_length=20, verbose_name='Código Postal')),
                ('telefono', models.CharField(max_length=20, verbose_name='Teléfono')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='tienda_usuario_set', related_query_name='tienda_usuario', to='auth.group', verbose_name='groups')),
                ('pais', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='TiendaOnline.isvpais', verbose_name='País')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='tienda_usuario_set', related_query_name='tienda_usuario', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='pedido',
            name='usuario',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pedidos', to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
    ]
